using System;
using System.Collections.Generic;
using System.Text;



namespace TEST_FOR_PUBLIC
{
    public class Program
    {
        public static string FindInterSection(string[] strArr)
        {
            string result = null;
            string[] strArr1 = strArr[0].Split(',');
            string[] strArr2 = strArr[1].Split(',');
            foreach (var item1 in strArr1)
            {
                foreach (var item2 in strArr2)
                {
                    if(item1.Trim() == item2.Trim())
                    {
                        result += item1.Trim()+',';
                    }

                }
            }
            if (result.EndsWith(',')) result = result.Substring(0, result.Length - 1);
            //if (string.IsNullOrWhiteSpace(result)) result = "false";
            return result;
        }
        static void Main()
        {
            string[] strArr = new string[] { "1, 3, 4, 7, 13", "1, 2, 4, 13, 15"};
            Console.WriteLine(FindInterSection(strArr));

            string MyString = "Hello World!";
            char[] MyChar = { 'r', 'o', 'W', 'l', 'd', '!', ' ' };
            string NewString = MyString.TrimEnd(MyChar);
            Console.WriteLine(NewString);

            //Простой способ удалить пробелы с обоих концов строки — метод String.Trim, 
            //использование которого показано в следующем примере.
            string MyString1 = " Big   ";
            Console.WriteLine("Hello{0}World!", MyString1);
            string TrimString = MyString1.Trim();
            Console.WriteLine("Hello{0}World!", TrimString);
            //       The example displays the following output:
            //             Hello Big   World!
            //             HelloBigWorld!

            //Кроме того, можно удалить символы, указанные в массиве знаков, из начала и конца строки.
            //В следующем примере удаляются символы пробелов, точки и звездочки.
            String header = "* A Short String. *";
            Console.WriteLine(header);
            Console.WriteLine(header.Trim(new Char[] { ' ', '*', '.' }));
            // The example displays the following output:
            //       * A Short String. *
            //       A Short String

            //TRIM END
            //Метод String.TrimEnd удаляет символы в конце строки, создавая новый строковый объект
            string MyString2 = "Hello World!";
            char[] MyChar1 = { 'r', 'o', 'W', 'l', 'd', '!', ' ' };
            string NewString2 = MyString2.TrimEnd(MyChar1);
            Console.WriteLine(NewString);

            //Ниже приведен пример удаления последнего слова строки с помощью метода TrimEnd.В этом коде после слова Hello следует запятая, 
            //а поскольку запятая не указана в массиве символов для сокращения, то выполнение операции прекращается на запятой.
            string MyString3 = "Hello, World!";
            char[] MyChar3 = { 'r', 'o', 'W', 'l', 'd', '!', ' ' };
            string NewString3 = MyString3.TrimEnd(MyChar);
            Console.WriteLine(NewString);

            //TRIM START
            //Метод String.TrimStart аналогичен методу String.TrimEnd за исключением того, что он создает новую строку путем удаления знаков в начале существующего строкового объекта.
            string MyString4 = "Hello World!";
            char[] MyChar4 = { 'e', 'H', 'l', 'o', ' ' };
            string NewString4 = MyString4.TrimStart(MyChar);
            Console.WriteLine(NewString);

            //УДАЛЕНИЕ
            string MyString5 = "Hello Beautiful World!";
            Console.WriteLine(MyString5.Remove(5, 10));
            // The example displays the following output:
            //         Hello World!

            //ЗАМЕНА
            //Чтобы удалить из строки указанный символ или подстроку, можно вызвать метод String.Replace(String, String) 
            //и указать пустую строку(String.Empty) в качестве замены.В следующем примере удаляются все запятые из строки.
            String phrase = "a cold, dark night";
            Console.WriteLine("Before: {0}", phrase);
            phrase = phrase.Replace(",", "");
            Console.WriteLine("After: {0}", phrase);
            // The example displays the following output:
            //       Before: a cold, dark night
            //       After: a cold dark night
        }
    }
}
